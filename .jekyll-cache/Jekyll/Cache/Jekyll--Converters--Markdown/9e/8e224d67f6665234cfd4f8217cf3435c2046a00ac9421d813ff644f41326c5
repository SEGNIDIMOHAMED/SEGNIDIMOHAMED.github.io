I"l<p>Recently, I decided to learn about Docker and how it can be used to run applications. Discovering this has since opened up my mind how we can make best use of our hardware’s capacity.</p>

<p>In this tutorial, I will walkthrough the steps of getting Docker setup on a GCE instance on Google Cloud. By the end of this tutorial, you should have a VM setup with Docker installed to run your containerized applications.</p>

<p>Before you get started, this tutorial assumes you have a Google Cloud account and a project already setup.</p>

<h1 id="step-0">Step 0</h1>

<h2 id="log-onto-the-gcp-console-and-navigate-to-compute-engine">Log onto the GCP console and navigate to Compute Engine</h2>

<h1 id="step-1">Step 1</h1>

<h2 id="create-a-vm-instance">Create a VM instance</h2>

<p>Once you’ve navigated to Compute Engine, click on the ‘CREATE INSTANCE’ button on the top.</p>

<p><img src="../images/create-instance.png" alt="create-instance" /></p>

<p>We’ll be leaving most configurations as the default but changing the OS and adding an extra disk.</p>

<p>Scroll down to Boot Disk and click on ‘Change’. Here, select the following:
Operating System: Ubuntu
Version: Ubuntu 20.04 LTS
Boot disk type: Balanced persistent disk
Size (GB): 10</p>

<p>Next, scroll all the way to the bottom and select ‘Management, security, disks, networking, sole tenancy’.</p>

<p>When</p>

<h1 id="step-3">Step 3</h1>

<h2 id="ssh-into-the-instance">SSH into the instance</h2>

<h1 id="step-4">Step 4</h1>

<h2 id="make-sure-you-have-no-versions-of-docker-installed">Make sure you have no versions of Docker installed</h2>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span><span class="nb">sudo </span>apt-get remove docker docker-engine docker.io containerd runc
</code></pre></div></div>

<h1 id="step-6">Step 6</h1>

:ET