I"<p>When I was looking to deploy my this blog on AWS, I remember searching tirelessly for a tutorial that matched my needs. After reading many articles, I managed to piece together the steps and get it working.</p>

<p>In this tutorial, I will show you how you can deploy your Jekyll site (or any other static site) on AWS using S3, CloudFront and Route53. Before you get started, this tutorial assumes you already have an AWS account, a Jekyll site and a purchased domain.</p>

<h1 id="step-1">Step 1</h1>

<h2 id="creating-an-s3-bucket">Creating an S3 Bucket</h2>

<p>The first thing you need to do is head into the AWS console, sign-in and click into S3. You should see a page like below, minus the buckets.</p>

<p><img src="../images/s3-page.png" alt="step-1-s3" /></p>

<p>Click on â€˜Create bucketâ€™ in the top right hand corner and name your bucket the same as your domain, making sure to choose the region closest to you. Under â€˜Block Public Access settings for bucketâ€™, untick the first checkbox to make this bucket public. You screen should be similar to below.</p>

<p><img src="../images/s3-create.png" alt="step-1-s3-create" /></p>

<p>Leave the rest of the settings as is and click â€˜Create Bucketâ€™.</p>

<h1 id="step-2">Step 2</h1>

<h2 id="changing-the-bucket-policy">Changing the Bucket Policy</h2>

<p>Once youâ€™ve created the S3 Bucket, youâ€™ll need to change the bucket policy to provide access to the objects stored in your bucket.</p>

<p>Navigate to your bucket and click on the â€˜Permissionsâ€™ tab. Scroll down to â€˜Bucket Policyâ€™ and click edit. Copy &amp; paste the json code shown below; replacing â€˜blog.thanesh.ioâ€™ with your bucket name.</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
 </span><span class="nl">"Version"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2012-10-17"</span><span class="p">,</span><span class="w">
 </span><span class="nl">"Statement"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
  </span><span class="p">{</span><span class="w">
   </span><span class="nl">"Sid"</span><span class="p">:</span><span class="w"> </span><span class="s2">"AddPerm"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"Effect"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Allow"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"Principal"</span><span class="p">:</span><span class="w"> </span><span class="s2">"*"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"Action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"s3:GetObject"</span><span class="p">,</span><span class="w">
   </span><span class="nl">"Resource"</span><span class="p">:</span><span class="w"> </span><span class="s2">"arn:aws:s3:::blog.thanesh.io/*"</span><span class="w">
  </span><span class="p">}</span><span class="w">
 </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<h1 id="step-3">Step 3</h1>

<h2 id="enable-static-hosting">Enable Static Hosting</h2>

<p>Next, head into the â€˜Propertiesâ€™ tab and scroll down until you find â€˜Static website hostingâ€™. Click the â€˜Editâ€™ button on the top right hand corner and you should be directed to a settings page.</p>

<p>On here, click on Enable and specify the index document of your website. You donâ€™t have to change any other settings.</p>

<p><img src="../images/s3-static-hosting.png" alt="s3-static-hosting" /></p>

<h1 id="step-4">Step 4</h1>

<h2 id="deploying-your-website">Deploying Your Website</h2>

<p>Now itâ€™s time to upload your site files into your AWS bucket.</p>

:ET