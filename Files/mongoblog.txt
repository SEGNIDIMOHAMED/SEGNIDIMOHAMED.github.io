
var coursedata = [
{_id:"a", coursename:"English", cost: 200 },
{_id:"b", coursename:"Big Data", cost: 600 },
{_id:"c", coursename:"Business", cost: 400 },
{_id:"d", coursename:"Biology", cost: 300 }
]; 
db.course.insert (coursedata);


var studentdata =[
{_id:1, studentname:"John" },
{_id:2, studentname:"Mary" },
{_id:3, studentname:"Adam" },
{_id:4, studentname:"Terry" }
];
db.student.insert (studentdata);

var studentcoursedata =[
{sid:1, cid : "a"}, 
{sid:1, cid : "b"},
{sid:2, cid : "d"},
{sid:3, cid : "a"},
{sid:3, cid : "c"},
{sid:4, cid : "b"},
{sid:4, cid : "c"},
];
db.studentcourse.insert(studentcoursedata)

if I want to know who take course of big data 

in SQL, I would either use join or subquery

method 1: subquery logic

//I would write sql like this
select studentname
from student 
where _id in (select sid from studentcourse where cid in (select _id from course where coursename = "Big Data" ) )

// in mongodb, I would do like this
//1. get course big data info, this is one to one relation, use findOne
var course_BigData = db.course.findOne({coursename:"Big Data"});


//2. get studentid  because this is one to many relation, need to use loop to put all sid into one array for later use
var StudentCourses = db.studentcourse.find({cid:course_BigData._id});
var studentIDs = [];
while (StudentCourses.hasNext() == true) {
		var StudentCourse = StudentCourses.next();
		studentIDs.push(StudentCourse.sid);
}
studentIDs

//3. get studentname list
db.student.find({_id:{$in:studentIDs}}, {studentname:1, _id:0});


//Method 2   use join
in SQL, I would write SQL like this
select studentname
from student s
inner join studentcourse sc on s._id = sc.sid
inner join course c on sc.cid = c._id

in mongodb, I would like do





var studentcoursedocs = db.course.aggregate([
   {$match: { coursename: "Big Data" }} ,
   {
      $lookup:
        {
          from: "studentcourse",
          localField: "_id",
          foreignField: "cid",
          as: "studentcourse_docs"
        }
   }, 
   { $project : { _id: 0, "studentcourse_docs.sid" : 1 } },
   { $unwind : "$studentcourse_docs"}
]);
var studentIDs = [];
while (studentcoursedocs.hasNext() == true) {
		var studentcoursedoc = studentcoursedocs.next();
		studentIDs.push(studentcoursedoc.studentcourse_docs.sid);
}
studentIDs


//1
var studentcoursedocs = db.course.aggregate([
   {$match: { coursename: "Big Data" }} ,
   {
      $lookup:
        {
          from: "studentcourse",
          localField: "_id",
          foreignField: "cid",
          as: "studentcourse_docs"
        }
   }, 
   { $project : { _id: 0, "studentcourse_docs.sid" : 1 } },
   { $unwind : "$studentcourse_docs"}
]);
//2
var studentIDs = [];
while (studentcoursedocs.hasNext() == true) {
		var studentcoursedoc = studentcoursedocs.next();
		studentIDs.push(studentcoursedoc.studentcourse_docs.sid);
}
studentIDs;












